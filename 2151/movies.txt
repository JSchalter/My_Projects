/FavoriteSongs.java

import java.io.File;

import java.io.FileNotFoundException;

import java.io.PrintWriter;

import java.util.Scanner;

import javafx.application.Application;

import static javafx.application.Application.launch;

import javafx.collections.ObservableList;

import javafx.geometry.Insets;

import javafx.geometry.Pos;

import javafx.scene.Scene;

import javafx.scene.control.Alert;

import javafx.scene.control.Button;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;

import javafx.scene.control.SelectionMode;

import javafx.scene.control.TextField;

import javafx.scene.layout.BorderPane;

import javafx.scene.layout.HBox;

import javafx.stage.Stage;

public class FavoriteSongs extends Application {

//declaring important UI components

TextField input;

ListView<String> listView;

Button addBtn, removeBtn, loadBtn, saveBtn;

//file name

String fileName = "songs.txt";

@Override

public void start(Stage primaryStage) {

//creating a border pane, adjusting padding

BorderPane root = new BorderPane();

root.setPadding(new Insets(15));

//label and text field for input

Label label = new Label("Enter the name of song: ");

input = new TextField();

//adding both to an HBox

HBox box1 = new HBox(label, input);

box1.setSpacing(10);

box1.setPadding(new Insets(5));

//initializing list view, enabling multi select

listView = new ListView<String>();

listView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);

//initializing buttons

addBtn = new Button("Add");

removeBtn = new Button("Remove");

loadBtn = new Button("Load");

saveBtn = new Button("Save");

//adding event listeners

addBtn.setOnAction(e -> {

//fetching name, converting to lower case, removing trailing/leading white space

//and adding to listView

String name = input.getText().toLowerCase().trim();

listView.getItems().add(name);

input.setText(""); //clearing input field

});

//also adding the same listener to input text field, so that user can simply press enter key

//after typing name, to add it. remove if not needed

input.setOnAction(addBtn.getOnAction());

removeBtn.setOnAction(e -> {

//getting list of selected items

ObservableList<String> items = listView.getSelectionModel().getSelectedItems();

if (items.isEmpty()) {

//nothing is selected, displaying an error message

displayMessage("Please select an item to delete!");

} else {

//removing all selected items from listView. note: if there are duplicate items in listView,

//selecting and removing one item will remove all the occurrences of that item

listView.getItems().removeAll(items);

}

});

saveBtn.setOnAction(e -> {

try {

//opening file in write mode

PrintWriter writer = new PrintWriter(new File(fileName));

//writing all songs to file

for (String name : listView.getItems()) {

writer.println(name);

}

//closing, saving changes

writer.close();

//letting the user know the status

displayMessage("saved to " + fileName);

} catch (FileNotFoundException ex) {

displayMessage("Error occurred while opening " + fileName + " file");

}

});

loadBtn.setOnAction(e -> {

try {

//clearing current contents

listView.getItems().clear();

//opening file,

Scanner sc = new Scanner(new File(fileName));

//looping and adding each item on the file to listView

while (sc.hasNext()) {

listView.getItems().add(sc.nextLine().trim());

}

sc.close();

} catch (FileNotFoundException ex) {

displayMessage("Error occurred while opening " + fileName + " file");

}

});

//adding buttons to an HBox

HBox btns = new HBox(addBtn, removeBtn, loadBtn, saveBtn);

btns.setAlignment(Pos.CENTER);

btns.setSpacing(10);

btns.setPadding(new Insets(5));

//ading everything to border pane

root.setTop(box1);

root.setBottom(btns);

root.setCenter(listView);

//setting up and displaying a scene

Scene scene = new Scene(root);

primaryStage.setScene(scene);

primaryStage.setTitle("Favorite Songs");

primaryStage.show();

}

//helper method to display a pop up message to the user.

private void displayMessage(String message) {

Alert alert = new Alert(Alert.AlertType.INFORMATION, message);

alert.setHeaderText("");

alert.showAndWait();

}

public static void main(String[] args) {

launch(args);

}

}

/*OUTPUT*/
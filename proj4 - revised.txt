import java.io.IOException;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;


public class CharaccterScreenMain extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        
        
        Parent root = FXMLLoader.load(getClass().getResource("characterScreenFXML.fxml")); 
        Scene scene = new Scene(root);
        primaryStage.setScene(scene);
        primaryStage.show();

}
    public static void main(String[] args) {
        launch(args);
    }
    
}

------------------------


package characterScreen

import java.io.BufferedReader;
import java.io.BufferedWriter; 
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream; 
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStreamWriter; 
import java.net.URL;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.Scanner;
import javafx.collections.FXCollections; 
import javafx.collections.ObservableList; 
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.input.MouseEvent;

public class CharacterScreenMain implements Initializable {

    @FXML
    private ComboBox<String> characterClass;
    @FXML
    private RadioButton male;
    @FXML
    private RadioButton female;
    @FXML
    private RadioButton other;
    @FXML
    private TextField name;
    @FXML
    private Slider justice;

ObservableList<String> cClass = FXCollections.observableArrayList
        ("Warrior", "Beastmaster", "Monk", "Wizard", "Demon Hunter");
    
    String type;
    
    @FXML
    private ToggleGroup Gender;

    @Override
    public void initialize(URL location, ResourceBundle resources) 
        { characterClass.setItems(cClass);
    }
    
    @FXML
    private void selectGender(ActionEvent event) {
        type = "";
        
        if(male.isSelected()) {
            type += male.getText()+"\n";
        }
        if(female.isSelected()) {
            type += female.getText()+"\n";
        }
        if(other.isSelected()) {
            type += other.getText()+"\n";
        }
    }

    @FXML
    private void exitOperation(ActionEvent event) {
        System.exit(1);
    }

    @FXML
    private void resetOperation(ActionEvent event) {
    
        List<String> list = new ArrayList<>(characterClass.getItems()); 
            characterClass.getItems().removeAll(list); 
            characterClass.getItems().addAll(list);

            male.setSelected(false);
            female.setSelected(false);
            other.setSelected(false);
                type ="";

            name.clear();
    }

    @FXML
    private void saveOperation(ActionEvent event) throws IOException { 
        Path p1 = Paths.get(System.getProperty("user.home"), "Desktop", "profile.txt");
        String path = p1.toString();
        File file = new File(path);

        if (!file.exists()) {
            file.createNewFile();
            System.out.println("File created Successfully"); }
        else {
            System.out.println("File already exists");
    }
            
        FileOutputStream fos = new FileOutputStream(file);
        try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos))) {
            bw.write("**Player Profile**");
            bw.newLine(); bw.write("Player Name: " + name.getText()); bw.newLine(); 
            bw.write("Gender: " + type); bw.newLine();
            bw.write("Class: " + characterClass.getValue()); bw.newLine();
        }
    }
    
    @FXML
    private void justiceSlider(MouseEvent event) {
        final Label justiceCaption;
        justiceCaption = new Label ("Justice V Compassion");
        Slider slider = new Slider();
        
        slider.setMin(0);
        slider.setMax(100);
        
    }
    
    /**@FXML
    private List<String> readFile(String filename) throws FileNotFoundException {
        List<String> records = new ArrayList<>();
        
        try {
            try (BufferedReader reader = new BufferedReader (new FileReader(filename))) {
                String line;
                
                while ((line = reader.readLine()) != null) {
                    records.add(line);
                }
            }
            return records;
        }
        catch (IOException e) {
                System.err.format("Exception occurred trying to read '%s'.", filename);
                return null;
            }
        }**/
    }


----------------

FXML

----------------

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.RadioButton?>
<?import javafx.scene.control.Slider?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.ToggleGroup?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.text.Text?>

<AnchorPane prefHeight="373.0" prefWidth="500.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="characterScreen.CharacterScreenController">
    <children>
        <ComboBox fx:id="characterClass" layoutX="161.0" layoutY="152.0" prefHeight="35.0" prefWidth="150.0" promptText="Warrior" /> <RadioButton fx:id="male" layoutX="70.0" layoutY="97.0" mnemonicParsing="false" onAction="#selectGender" prefHeight="35.0" prefWidth="61.0" text="Male">
        <font>
        <Font size="14.0" />
        </font>
            <toggleGroup>
              <ToggleGroup fx:id="Gender" />
                </toggleGroup>
                      </RadioButton>
                        <RadioButton fx:id="female" layoutX="209.0" layoutY="97.0" mnemonicParsing="false" onAction="#selectGender" prefHeight="35.0" prefWidth="77.0" text="Female" toggleGroup="$Gender">
                            <font>
                                <Font size="14.0" />
                            </font>
                        </RadioButton>
                       <RadioButton fx:id="other" layoutX="341.0" layoutY="97.0" mnemonicParsing="false" onAction="#selectGender" prefHeight="35.0" prefWidth="69.0" text="Other" toggleGroup="$Gender">
                            <font>
                                <Font size="14.0" />
                            </font>
                       </RadioButton>
                            <Text layoutX="34.0" layoutY="72.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Select Gender">
                                <font>
                                    <Font name="System Bold" size="18.0" />
                                </font>
                            </Text>
                                <Text layoutX="32.0" layoutY="176.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Select Class">
                                    <font>
                                    <Font name="System Bold" size="18.0" />
                                </font>
                                </Text>
                                <Text layoutX="35.0" layoutY="328.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Enter Name">
                                   <font>
                                       <Font name="System Bold" size="18.0" />
                                   </font>
                                </Text>
            <TextField fx:id="name" layoutX="211.0" layoutY="303.0" prefHeight="35.0" prefWidth="216.0" />
                <MenuBar layoutY="3.0" prefHeight="24.0" prefWidth="500.0" AnchorPane.bottomAnchor="353.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
                    <menus>
                         <Menu mnemonicParsing="false" text="File">
                            <items>
                <MenuItem mnemonicParsing="false" onAction="#readFile" text="Open" />
                                <MenuItem mnemonicParsing="false" onAction="#saveOperation" text="Save" />
                            </items>
                        </Menu>
            <Menu mnemonicParsing="false" text="Options">
              <items>
                                <MenuItem mnemonicParsing="false" onAction="#exitOperation" text="Exit" />
                                <MenuItem mnemonicParsing="false" onAction="#resetOperation" text="Reset Profile" />
              </items>
            </Menu>
                    </menus>
                </MenuBar>
      <Slider fx:id="justice" blockIncrement="5.0" layoutX="31.0" layoutY="246.0" onMouseDragged="#justiceSlider" />
      <Slider blockIncrement="5.0" layoutX="180.0" layoutY="246.0" onDragDetected="#justiceSlider" onMouseDragged="#justiceSlider" />
      <Slider blockIncrement="5.0" layoutX="331.0" layoutY="246.0" onDragDetected="#justiceSlider" onMouseDragged="#justiceSlider" />
        </children> 
</AnchorPane>
    